{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\NIR67\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\SmokEye\\\\src\\\\Context\\\\APIContext.jsx\";\nimport { createContext, useState, useEffect } from \"react\";\nimport { base_URL } from \"../../utilis/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var APIContext = createContext();\nexport default function APIContextProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    report = _useState2[0],\n    setReport = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentUser = _useState4[0],\n    setCurrentUser = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    allReports = _useState6[0],\n    setAllReports = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    allMyReports = _useState8[0],\n    setAllMyReports = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    visible = _useState10[0],\n    setVisible = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    allUsers = _useState12[0],\n    setAllUsers = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    popMsgReport = _useState14[0],\n    setpopMsgReport = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    popMsgDelete = _useState16[0],\n    setpopMsgDelete = _useState16[1];\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    infoData = _useState18[0],\n    setInfoData = _useState18[1];\n  var _useState19 = useState({}),\n    _useState20 = _slicedToArray(_useState19, 2),\n    location = _useState20[0],\n    setLocation = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    latitude = _useState22[0],\n    setLatitude = _useState22[1];\n  var _useState23 = useState(\"\"),\n    _useState24 = _slicedToArray(_useState23, 2),\n    longitude = _useState24[0],\n    setLongitude = _useState24[1];\n  var _useState25 = useState(\"\"),\n    _useState26 = _slicedToArray(_useState25, 2),\n    city = _useState26[0],\n    setCity = _useState26[1];\n  var _useState27 = useState(\"\"),\n    _useState28 = _slicedToArray(_useState27, 2),\n    street = _useState28[0],\n    setStreet = _useState28[1];\n  var _useState29 = useState(\"\"),\n    _useState30 = _slicedToArray(_useState29, 2),\n    streetNum = _useState30[0],\n    SetStreetNum = _useState30[1];\n  var GetAllUsers = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var res = yield fetch(`${base_URL}/users`);\n        var data = yield res.json();\n        setAllUsers(data);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    return function GetAllUsers() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var InsertNewUser = function () {\n    var _ref3 = _asyncToGenerator(function* (user) {\n      try {\n        var url = `${base_URL}/users/Register`;\n        var response = yield fetch(url, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(user)\n        });\n        if (!response.ok) {\n          throw new Error(\"Request failed with status \" + response.status());\n        } else {\n          setVisible(true);\n        }\n      } catch (err) {\n        console.log(\"err :>> \", err);\n      }\n    });\n    return function InsertNewUser(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var ConfirmClient = function () {\n    var _ref4 = _asyncToGenerator(function* (e, p) {\n      console.log(\"here\");\n      try {\n        var url = `${base_URL}/users/Login`;\n        var response = yield fetch(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: e,\n            password: p\n          })\n        });\n        if (response.ok) {\n          var user = yield response.json();\n          yield setCurrentUser(user);\n          return yield user.role;\n        } else {\n          var error = yield response.text();\n          throw new Error(error);\n        }\n      } catch (err) {\n        console.log(err);\n        alert(\"שם משתמש או סיסמא לא תקינים\");\n      }\n    });\n    return function ConfirmClient(_x2, _x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var UpdateUser = function () {\n    var _ref5 = _asyncToGenerator(function* (currentE, firstName, lastName, email, phone, address) {\n      try {\n        var url = `${base_URL}/users/UpdateUser`;\n        var response = yield fetch(url, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            currentE: currentE,\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            phone: phone,\n            address: address\n          })\n        });\n        if (!response.ok) {\n          throw new Error(\"Request failed with status \" + response.status());\n        } else {\n          setCurrentUser(response.json());\n        }\n      } catch (err) {\n        console.log(\"err :>> \", err);\n      }\n    });\n    return function UpdateUser(_x4, _x5, _x6, _x7, _x8, _x9) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var InsertReport = function () {\n    var _ref6 = _asyncToGenerator(function* (doc, email) {\n      try {\n        if (doc.date == null) {\n          return;\n        }\n        var dateString = doc.date;\n        var dateParts = dateString.split(\"/\");\n        var formattedDate = `${dateParts[0]}/${dateParts[1]}/${dateParts[2]}`;\n        var url = `${base_URL}/reports/AddReport`;\n        var response = yield fetch(url, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            date: formattedDate,\n            type: doc.type,\n            location: doc.location,\n            address: doc.address,\n            place: doc.place,\n            details: doc.details,\n            image: doc.image,\n            email: email\n          })\n        });\n        if (response.ok) {\n          console.log('עבר בהצלחה :>> ');\n          setpopMsgReport(true);\n        }\n      } catch (err) {\n        alert(\"דיווח נכשל\");\n        console.log(\"err :>> \", err);\n      }\n      setReport({});\n    });\n    return function InsertReport(_x10, _x11) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var DeleteReport = function () {\n    var _ref7 = _asyncToGenerator(function* (id) {\n      try {\n        var url = `${base_URL}/reports/DeleteReport`;\n        var response = yield fetch(url, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            id: id\n          })\n        });\n        if (response.ok) {\n          setpopMsgDelete(true);\n        }\n      } catch (err) {\n        console.log('err :>> ', err);\n      }\n    });\n    return function DeleteReport(_x12) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var ShowMyReports = function () {\n    var _ref8 = _asyncToGenerator(function* (email) {\n      try {\n        var url = `${base_URL}/reports/ShowMyReports`;\n        var response = yield fetch(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: email\n          })\n        });\n        if (response.ok) {\n          setAllMyReports(yield response.json());\n        }\n      } catch (err) {\n        console.log(\"err :>> \", err);\n      }\n    });\n    return function ShowMyReports(_x13) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var GetReports = function () {\n    var _ref9 = _asyncToGenerator(function* () {\n      try {\n        var res = yield fetch(`${base_URL}/reports`);\n        var data = yield res.json();\n        setAllReports(data);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    return function GetReports() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  var GetInfo = function () {\n    var _ref10 = _asyncToGenerator(function* () {\n      try {\n        var res = yield fetch(`${base_URL}/info`);\n        var data = yield res.json();\n        setInfoData(data);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    return function GetInfo() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n  var ImageUploader = function () {\n    var _ref11 = _asyncToGenerator(function* (uri) {\n      try {\n        var response = yield fetch(`${base_URL}/upload`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            image: uri\n          })\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to upload image\");\n        } else {\n          var data = yield response.json();\n          return data.secure_url;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    return function ImageUploader(_x14) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n  var GetAddress = function () {\n    var _ref12 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(`https://api.tomtom.com/search/2/reverseGeocode/${latitude},${longitude}.json?&key=RjOFc93hAGcOpbjZ0SnOV4TIzDTP1mz9`, {\n          headers: {\n            Accept: \"*/*\"\n          }\n        });\n        var result = yield response.json();\n        console.log(result);\n        if (result.addresses[0].address.municipality == \"\" || result.addresses[0].address.street == \"\" || result.addresses[0].address.streetNumber == \"\") {\n          alert(\"לא היה ניתן למצוא את המיקום שלך, אנא מלא את פרטי המיקום באופן ידני\");\n        } else {\n          setCity(result.addresses[0].address.municipality);\n          setStreet(extractStreetName(result.addresses[0].address.street));\n          SetStreetNum(result.addresses[0].address.streetNumber);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function GetAddress() {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n  var extractStreetName = function extractStreetName(inputString) {\n    var firstSpaceIndex = inputString.indexOf(\" \");\n    if (firstSpaceIndex !== -1) {\n      return inputString.substring(firstSpaceIndex + 1);\n    }\n    return inputString;\n  };\n  var GetLocationByAddress = function () {\n    var _ref13 = _asyncToGenerator(function* (street, num, city) {\n      try {\n        var res = yield fetch(`https://api.tomtom.com/search/2/structuredGeocode.json?key=RjOFc93hAGcOpbjZ0SnOV4TIzDTP1mz9&countryCode=IL&limit=10&ofss=0&streetNumber=${num}&streetName=${street}&municipality=${city}`);\n        var data = yield res.json();\n        return {\n          lon: data.results[0].position.lon,\n          lat: data.results[0].position.lat\n        };\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    return function GetLocationByAddress(_x15, _x16, _x17) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    GetAllUsers();\n  }, [allUsers]);\n  useEffect(function () {\n    GetReports();\n  }, [allReports]);\n  useEffect(function () {\n    GetInfo();\n  }, [infoData]);\n  var value = {\n    UpdateUser: UpdateUser,\n    InsertReport: InsertReport,\n    setReport: setReport,\n    setCurrentUser: setCurrentUser,\n    ConfirmClient: ConfirmClient,\n    ShowMyReports: ShowMyReports,\n    InsertNewUser: InsertNewUser,\n    setVisible: setVisible,\n    setInfoData: setInfoData,\n    ImageUploader: ImageUploader,\n    setLocation: setLocation,\n    setLatitude: setLatitude,\n    setLongitude: setLongitude,\n    setCity: setCity,\n    setStreet: setStreet,\n    SetStreetNum: SetStreetNum,\n    GetAddress: GetAddress,\n    GetLocationByAddress: GetLocationByAddress,\n    setAllMyReports: setAllMyReports,\n    setpopMsgReport: setpopMsgReport,\n    DeleteReport: DeleteReport,\n    setpopMsgDelete: setpopMsgDelete,\n    allUsers: allUsers,\n    popMsgDelete: popMsgDelete,\n    allMyReports: allMyReports,\n    popMsgReport: popMsgReport,\n    city: city,\n    street: street,\n    streetNum: streetNum,\n    latitude: latitude,\n    longitude: longitude,\n    infoData: infoData,\n    visible: visible,\n    allReports: allReports,\n    currentUser: currentUser,\n    report: report\n  };\n  return _jsxDEV(APIContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 10\n  }, this);\n}","map":{"version":3,"names":["createContext","useState","useEffect","base_URL","jsxDEV","_jsxDEV","APIContext","APIContextProvider","_ref","children","_useState","_useState2","_slicedToArray","report","setReport","_useState3","_useState4","currentUser","setCurrentUser","_useState5","_useState6","allReports","setAllReports","_useState7","_useState8","allMyReports","setAllMyReports","_useState9","_useState10","visible","setVisible","_useState11","_useState12","allUsers","setAllUsers","_useState13","_useState14","popMsgReport","setpopMsgReport","_useState15","_useState16","popMsgDelete","setpopMsgDelete","_useState17","_useState18","infoData","setInfoData","_useState19","_useState20","location","setLocation","_useState21","_useState22","latitude","setLatitude","_useState23","_useState24","longitude","setLongitude","_useState25","_useState26","city","setCity","_useState27","_useState28","street","setStreet","_useState29","_useState30","streetNum","SetStreetNum","GetAllUsers","_ref2","_asyncToGenerator","res","fetch","data","json","err","console","log","apply","arguments","InsertNewUser","_ref3","user","url","response","method","headers","body","JSON","stringify","ok","Error","status","_x","ConfirmClient","_ref4","e","p","email","password","role","error","text","alert","_x2","_x3","UpdateUser","_ref5","currentE","firstName","lastName","phone","address","_x4","_x5","_x6","_x7","_x8","_x9","InsertReport","_ref6","doc","date","dateString","dateParts","split","formattedDate","type","place","details","image","_x10","_x11","DeleteReport","_ref7","id","_x12","ShowMyReports","_ref8","_x13","GetReports","_ref9","GetInfo","_ref10","ImageUploader","_ref11","uri","secure_url","_x14","GetAddress","_ref12","Accept","result","addresses","municipality","streetNumber","extractStreetName","inputString","firstSpaceIndex","indexOf","substring","GetLocationByAddress","_ref13","num","lon","results","position","lat","_x15","_x16","_x17","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/NIR67/OneDrive/שולחן העבודה/SmokEye/src/Context/APIContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport { base_URL } from \"../../utilis/api\";\r\nexport const APIContext = createContext();\r\n\r\nexport default function APIContextProvider({ children }) {\r\n  const [report, setReport] = useState({});\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [allReports, setAllReports] = useState([]);\r\n  const [allMyReports, setAllMyReports] = useState([]);\r\n  const [visible, setVisible] = useState(false);\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [popMsgReport, setpopMsgReport] = useState(false);\r\n  const [popMsgDelete, setpopMsgDelete] = useState(false);\r\n  const [infoData, setInfoData] = useState([]);\r\n  const [location, setLocation] = useState({});\r\n  const [latitude, setLatitude] = useState(\"\");\r\n  const [longitude, setLongitude] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [street, setStreet] = useState(\"\");\r\n  const [streetNum, SetStreetNum] = useState(\"\");\r\n\r\n  //Users\r\n\r\n  const GetAllUsers = async()=>{\r\n    try {\r\n      let res = await fetch(`${base_URL}/users`);\r\n      let data = await res.json();\r\n      setAllUsers(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\n  //Add Client to clients Array\r\n  const InsertNewUser = async (user) => {\r\n    try {\r\n      const url = `${base_URL}/users/Register`;\r\n      const response = await fetch(url, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed with status \" + response.status());\r\n      } else {\r\n        setVisible(true);\r\n      }\r\n    } catch (err) {\r\n      console.log(\"err :>> \", err);\r\n    }\r\n  };\r\n\r\n  // chack if the user is exsist\r\n  const ConfirmClient = async (e, p) => {\r\n    console.log(\"here\")\r\n    try {\r\n      let url = `${base_URL}/users/Login`;\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email: e, password: p }),\r\n      });\r\n      if (response.ok) {\r\n        let user = await response.json();\r\n        await setCurrentUser(user);\r\n        return await user.role;\r\n      } else {\r\n        let error = await response.text();\r\n        throw new Error(error);\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n      alert(\"שם משתמש או סיסמא לא תקינים\");\r\n    }\r\n  };\r\n  //update User details\r\n  const UpdateUser = async (currentE, firstName, lastName, email, phone, address) => {\r\n    try {\r\n      const url = `${base_URL}/users/UpdateUser`;\r\n      const response = await fetch(url, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ currentE: currentE, firstName: firstName, lastName: lastName, email: email, phone: phone, address: address }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed with status \" + response.status());\r\n      } else {\r\n        //setVisible(true);\r\n        setCurrentUser(response.json())\r\n      }\r\n    } catch (err) {\r\n      console.log(\"err :>> \", err);\r\n    }\r\n  };\r\n\r\n  //Reports\r\n\r\n  //insert new Report\r\n  const InsertReport = async (doc, email) => {\r\n    try {\r\n      if (doc.date == null) {\r\n        return;\r\n      }\r\n      let dateString = doc.date;\r\n      let dateParts = dateString.split(\"/\");\r\n      let formattedDate = `${dateParts[0]}/${dateParts[1]}/${dateParts[2]}`;\r\n      const url = `${base_URL}/reports/AddReport`;\r\n      const response = await fetch(url, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          date: formattedDate,\r\n          type: doc.type,\r\n          location: doc.location,\r\n          address: doc.address,\r\n          place: doc.place,\r\n          details: doc.details,\r\n          image: doc.image,\r\n          email: email,\r\n        }),\r\n      });\r\n      if (response.ok) {\r\n        console.log('עבר בהצלחה :>> ');\r\n        setpopMsgReport(true);\r\n      }\r\n    } catch (err) {\r\n      alert(\"דיווח נכשל\");\r\n      console.log(\"err :>> \", err);\r\n    }\r\n    setReport({});\r\n  };\r\n  //delete Report from Reports DB \r\n  const DeleteReport = async (id) => {\r\n    try {\r\n      const url = `${base_URL}/reports/DeleteReport`;\r\n      const response = await fetch(url, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      if (response.ok) {\r\n        setpopMsgDelete(true);\r\n      }\r\n    } catch (err) {\r\n      console.log('err :>> ', err);\r\n    }\r\n  }\r\n  //show reports of user\r\n  const ShowMyReports = async (email) => {\r\n    try {\r\n      const url = `${base_URL}/reports/ShowMyReports`;\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email: email }),\r\n      });\r\n      if (response.ok) {\r\n        setAllMyReports(await response.json());\r\n      }\r\n    } catch (err) {\r\n      console.log(\"err :>> \", err);\r\n    }\r\n  };\r\n  const GetReports = async () => {\r\n    try {\r\n      let res = await fetch(`${base_URL}/reports`);\r\n      let data = await res.json();\r\n      setAllReports(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  //Info\r\n\r\n  //Get all queries\r\n  const GetInfo = async () => {\r\n    try {\r\n      let res = await fetch(`${base_URL}/info`);\r\n      let data = await res.json();\r\n      setInfoData(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\n  //Upload\r\n\r\n  // upload image and get image url\r\n  const ImageUploader = async (uri) => {\r\n    try {\r\n      const response = await fetch(`${base_URL}/upload`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ image: uri }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to upload image\");\r\n      } else {\r\n        const data = await response.json();\r\n        return data.secure_url;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  //location\r\n  //get Address from spcific cords\r\n  const GetAddress = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.tomtom.com/search/2/reverseGeocode/${latitude},${longitude}.json?&key=RjOFc93hAGcOpbjZ0SnOV4TIzDTP1mz9`,\r\n        {\r\n          headers: {\r\n            Accept: \"*/*\",\r\n          },\r\n        }\r\n      );\r\n      const result = await response.json();\r\n      console.log(result);\r\n      if (\r\n        result.addresses[0].address.municipality == \"\" ||\r\n        result.addresses[0].address.street == \"\" ||\r\n        result.addresses[0].address.streetNumber == \"\"\r\n      ) {\r\n        alert(\r\n          \"לא היה ניתן למצוא את המיקום שלך, אנא מלא את פרטי המיקום באופן ידני\"\r\n        );\r\n      } else {\r\n        setCity(result.addresses[0].address.municipality);\r\n        setStreet(extractStreetName(result.addresses[0].address.street));\r\n        SetStreetNum(result.addresses[0].address.streetNumber);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const extractStreetName = (inputString) => {\r\n    const firstSpaceIndex = inputString.indexOf(\" \");\r\n    if (firstSpaceIndex !== -1) {\r\n      return inputString.substring(firstSpaceIndex + 1);\r\n    }\r\n    return inputString;\r\n  };\r\n\r\n  //Get Location from address input from External API \r\n  const GetLocationByAddress = async (street, num, city) => {\r\n    try {\r\n      let res = await fetch(`https://api.tomtom.com/search/2/structuredGeocode.json?key=RjOFc93hAGcOpbjZ0SnOV4TIzDTP1mz9&countryCode=IL&limit=10&ofss=0&streetNumber=${num}&streetName=${street}&municipality=${city}`);\r\n      let data = await res.json();\r\n      return {\r\n        lon: data.results[0].position.lon,\r\n        lat: data.results[0].position.lat\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    GetAllUsers();\r\n  },[allUsers])\r\n\r\n  useEffect(() => {\r\n    GetReports();\r\n  }, [allReports]);\r\n\r\n  useEffect(() => {\r\n    GetInfo();\r\n  }, [infoData]);\r\n\r\n  const value = {\r\n    UpdateUser,\r\n    InsertReport,\r\n    setReport,\r\n    setCurrentUser,\r\n    ConfirmClient,\r\n    ShowMyReports,\r\n    InsertNewUser,\r\n    setVisible,\r\n    setInfoData,\r\n    ImageUploader,\r\n    setLocation,\r\n    setLatitude,\r\n    setLongitude,\r\n    setCity,\r\n    setStreet,\r\n    SetStreetNum,\r\n    GetAddress,\r\n    GetLocationByAddress,\r\n    setAllMyReports,\r\n    setpopMsgReport,\r\n    DeleteReport,\r\n    setpopMsgDelete,\r\n    allUsers,\r\n    popMsgDelete,\r\n    allMyReports,\r\n    popMsgReport,\r\n    city,\r\n    street,\r\n    streetNum,\r\n    latitude,\r\n    longitude,\r\n    infoData,\r\n    visible,\r\n    allReports,\r\n    currentUser,\r\n    report,\r\n  };\r\n  return <APIContext.Provider value={value}>{children}</APIContext.Provider>;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}