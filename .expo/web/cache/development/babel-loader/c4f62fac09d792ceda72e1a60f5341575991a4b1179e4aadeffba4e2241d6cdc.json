{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Svg, { G, Circle } from \"react-native-svg\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NextButton(_ref) {\n  var percentage = _ref.percentage,\n    scrollTo = _ref.scrollTo;\n  var size = 128;\n  var strokeWidth = 2;\n  var center = size / 2;\n  var radius = size / 2 - strokeWidth / 2;\n  var circumference = 2 * Math.PI * radius;\n  var progressAnimation = useRef(new Animated.Value(0)).current;\n  var progressRef = useRef(null);\n  var animation = function animation(toValue) {\n    return Animated.timing(progressAnimation, {\n      toValue: toValue,\n      duration: 250,\n      useNativeDriver: true\n    }).start();\n  };\n  useEffect(function () {\n    progressAnimation.addListener(function (value) {\n      var strokeDashoffset = circumference - circumference * value.value / 100;\n      if (progressRef != null && progressRef.current) {\n        progressRef.current.setNativeProps({\n          strokeDashoffset: strokeDashoffset\n        });\n      }\n    }, [percentage]);\n    return function () {\n      progressAnimation.removeAllListeners();\n    };\n  }, []);\n  useEffect(function () {\n    animation(percentage);\n  }, [percentage]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Svg, {\n      width: size,\n      height: size,\n      children: _jsxs(G, {\n        rotation: \"-90\",\n        origin: center,\n        children: [_jsx(Circle, {\n          stroke: \"#E6E7E8\",\n          cx: center,\n          cy: center,\n          r: radius,\n          strokeWidth: strokeWidth\n        }), _jsx(Circle, {\n          ref: progressRef,\n          stroke: \"#F39508\",\n          fill: \"white\",\n          cx: center,\n          cy: center,\n          r: radius,\n          strokeWidth: strokeWidth,\n          strokeDasharray: circumference\n        })]\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: scrollTo,\n      style: styles.button,\n      activeOpacity: 0.6,\n      children: _jsx(AntDesign, {\n        name: \"arrowright\",\n        size: 30,\n        color: \"#fff\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button: {\n    position: \"absolute\",\n    backgroundColor: \"#F39508\",\n    borderRadius: 100,\n    padding: 20\n  }\n});","map":{"version":3,"names":["React","useEffect","useRef","useState","Svg","G","Circle","AntDesign","jsx","_jsx","jsxs","_jsxs","NextButton","_ref","percentage","scrollTo","size","strokeWidth","center","radius","circumference","Math","PI","progressAnimation","Animated","Value","current","progressRef","animation","toValue","timing","duration","useNativeDriver","start","addListener","value","strokeDashoffset","setNativeProps","removeAllListeners","View","style","styles","container","children","width","height","rotation","origin","stroke","cx","cy","r","ref","fill","strokeDasharray","TouchableOpacity","onPress","button","activeOpacity","name","color","StyleSheet","create","flex","justifyContent","alignItems","position","backgroundColor","borderRadius","padding"],"sources":["C:/Users/NIR67/OneDrive/שולחן העבודה/SmokEye/src/Components/NextButton.jsx"],"sourcesContent":["import {\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Animated,\r\n} from \"react-native\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport Svg, { G, Circle } from \"react-native-svg\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nexport default function NextButton({ percentage, scrollTo }) {\r\n  const size = 128;\r\n  const strokeWidth = 2;\r\n  const center = size / 2;\r\n  const radius = size / 2 - strokeWidth / 2;\r\n  const circumference = 2 * Math.PI * radius;\r\n  const progressAnimation = useRef(new Animated.Value(0)).current;\r\n  const progressRef = useRef(null);\r\n\r\n  // make the circle move when user pressed\r\n  const animation = (toValue) => {\r\n    return Animated.timing(progressAnimation, {\r\n      toValue,\r\n      duration: 250,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    progressAnimation.addListener(\r\n      (value) => {\r\n        const strokeDashoffset =\r\n          circumference - (circumference * value.value) / 100;\r\n        if (progressRef?.current) {\r\n          progressRef.current.setNativeProps({\r\n            strokeDashoffset\r\n          });\r\n        }\r\n      },\r\n      [percentage]\r\n    );\r\n    \r\n    return () => {\r\n      progressAnimation.removeAllListeners();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    animation(percentage);\r\n  }, [percentage]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Svg width={size} height={size}>\r\n        <G rotation=\"-90\" origin={center}>\r\n          <Circle\r\n            stroke=\"#E6E7E8\"\r\n            cx={center}\r\n            cy={center}\r\n            r={radius}\r\n            strokeWidth={strokeWidth}\r\n          />\r\n          <Circle\r\n            ref={progressRef}\r\n             stroke=\"#F39508\"\r\n             fill=\"white\"\r\n            cx={center}\r\n            cy={center}\r\n            r={radius}\r\n            strokeWidth={strokeWidth}\r\n            strokeDasharray={circumference}\r\n          />\r\n        </G>\r\n      </Svg>\r\n      <TouchableOpacity\r\n        onPress={scrollTo}\r\n        style={styles.button}\r\n        activeOpacity={0.6}\r\n      >\r\n        <AntDesign name=\"arrowright\" size={30} color=\"#fff\" />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    position: \"absolute\",\r\n    backgroundColor: \"#F39508\",\r\n    borderRadius: 100,\r\n    padding: 20,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}